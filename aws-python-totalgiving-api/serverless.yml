org: kirthiss
app: py-eventbridge
service: sulaba-api
frameworkVersion: ">=1.54.0 <3.0.0"

plugins:
  - serverless-python-requirements
  - serverless-lift
custom:
  pythonRequirements:
    dockerizePip: non-linux  
  sulaba-region: uk-sulaba

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: us-east-1
  lambdaHashingVersion: '20201221'
  endpointType: EDGE
  logs:                # Enable CloudWatch logs
    restApi: true
  tracing:             # Enable X-Ray tracing
    apiGateway: true
  
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "secretsmanager:GetSecretValue"
      Resource: "${cf:sulaba-api-deps-${self:provider.stage}.SulabaServerSecretArn}"
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource: ${cf:sulaba-api-deps-${self:provider.stage}.SNSTargetForFailedEvents}
    - Effect: "Allow"
      Action:
        - "events:PutEvents"
      Resource: "*"    
package:
  include:
    - config/**
    - node_modules/**
  exclude:
    - package.json
constructs:
  jobs:
    type: queue
    worker:
      handler: handler.consumer    
functions:
  totalgiving:
    handler: handler.totalgiving
    events:
      - http:
          path: /totalgiving
          method: post
          async: false
    environment:
      FAILURE_SNS: ${cf:sulaba-api-deps-${self:provider.stage}.SNSTargetForFailedEvents}
      EVENT_BRIDGE: ${cf:sulaba-api-deps-${self:provider.stage}.EventBusArn}
      ENDPOINT_SECRET: ${cf:sulaba-api-deps-${self:provider.stage}.SulabaServerSecretArn}
  producer:
    handler: handler.producer
    environment:
      QUEUE_URL: ${construct:jobs.queueUrl}
    events:
      - eventBridge:
          eventBus: ${cf:sulaba-api-deps-${self:provider.stage}.EventBusArn}
          pattern:
            source:
              - totalgiving
            detail-type:
              - donation