org: kirthiss
app: py-eventbridge
service: sulaba-api
frameworkVersion: ">=1.54.0 <3.0.0"

plugins:
  - serverless-python-requirements
  - serverless-lift
custom:
  pythonRequirements:
    dockerizePip: non-linux  
  sulaba-region: uk-sulaba

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: us-east-1
  lambdaHashingVersion: '20201221'
  endpointType: EDGE
  logs:                # Enable CloudWatch logs
    restApi: true
  tracing:             # Enable X-Ray tracing
    apiGateway: true
  
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "secretsmanager:GetSecretValue"
      Resource: "${cf:sulaba-api-deps-${self:provider.stage}.SulabaServerSecretArn}"
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource: ${cf:sulaba-api-deps-${self:provider.stage}.SNSTargetForFailedEvents}
    - Effect: "Allow"
      Action:
        - "events:PutEvents"
      Resource: "*"    
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
      Resource: "*"    

resources:
  Resources:
    stripebridgerule:
      Type: AWS::Events::Rule
      Properties:
        Description: Stripe Events Rule
        Name: StripeQueueRule
        EventBusName: ${self:custom.sulaba-region}-${self:provider.stage}-bus
        EventPattern:
          source:
            - stripe
          detail-type:
            - invoice.paid
        State: ENABLED
        Targets:
          - Arn: ${construct:stripe-queue.queueArn}
            Id: rule1234

package:
  include:
    - config/**
    - node_modules/**
  exclude:
    - package.json
 
functions:
  totalgiving:
    handler: handler.totalgiving_router
    timeout: 60
    events:
      - http:
          path: /totalgiving
          method: post
          async: false
    environment:
      FAILURE_SNS: ${cf:sulaba-api-deps-${self:provider.stage}.SNSTargetForFailedEvents}
      EVENT_BRIDGE: ${cf:sulaba-api-deps-${self:provider.stage}.EventBusArn}
      ENDPOINT_SECRET: ${cf:sulaba-api-deps-${self:provider.stage}.SulabaServerSecretArn}
      QUEUE_URL: ${construct:my-queue.queueUrl}
  stripe:
    handler: handler.stripe_router
    timeout: 60
    events:
      - http:
          path: /stripe
          method: post
          async: false
    environment:
      EVENT_BRIDGE: ${cf:sulaba-api-deps-${self:provider.stage}.EventBusArn}
      ENDPOINT_SECRET: ${cf:sulaba-api-deps-${self:provider.stage}.SulabaServerSecretArn}
      QUEUE_URL: ${construct:my-queue.queueUrl}


constructs:
  my-queue:
    type: queue
    alarm: kirthi.siva@ishafoundation.org
    worker:
      handler: handler.consumer_totalgiving
      timeout: 60
      environment:
        TOTALGIVING_QUEUE_URL: ${construct:my-queue.queueUrl}
        EVENT_BRIDGE: 'testing...'
  stripe-queue:
    type: queue
    alarm: kirthi.siva@ishafoundation.org
    worker:
      handler: handler.consumer_stripe
      timeout: 60
      environment:
        STRIPE_QUEUE_URL: ${construct:stripe-queue.queueUrl}
        EVENT_BRIDGE: 'testing...'

        # producer:
  #   handler: handler.producer
  #   environment:
  #     QUEUE_URL: ${construct:jobs.queueUrl}
  #   events:
  #     - eventBridge:
  #         eventBus: ${cf:sulaba-api-deps-${self:provider.stage}.EventBusArn}
  #         pattern:
  #           source:
  #             - totalgiving
  #           detail-type:
  #             - donation
